
var yourConsumerKey = "";
var yourConsumerSecret = "";
var yourAccessToken = "";
var yourTokenSecret = "";

var twitterAPI = require('node-twitter-api');
var util = require('util');
var fs = require('fs');

//var mozzarellaScore = 0;


var twitter = new twitterAPI({
    consumerKey: yourConsumerKey,
    consumerSecret: yourConsumerSecret});

twitter.getStream("filter", {track:"u"}, yourAccessToken,yourTokenSecret,onData);

function onData(error, streamEvent){
if (Object.keys(streamEvent).length === 0){
	return;
}
var tweetText = streamEvent['text'].toLowerCase();
var name = streamEvent['user']['screen_name'];
//console.log(streamEvent['user']['screen_name']);
//console.log(streamEvent['text']);

	
	var offendersList = []; // this is an assosciate array - container for objects

	// every time a new offender is detected 
	//(this is used to create an offender object, and happens only once for each offender)
		var tempOffender = {
		name: '',
		offensiveWord: '',
		offenseCount: 0
	}

	offendersList.push(tempOffender); // add person to list of known offenders

	// to check if an existing offender has more than one offense
	var i;
	offendersList[i].offenseCount++;

// if an offender has more than 5 offense, do something
	if (offendersList[i].offenseCount > 0) {

		console.log(name + "just said u again");

	}
	

}



/*
	// you want to check through all the offenders
	// this is the mechanism for adding to the offense count
	for ( loop ) {
		
		if (offendersList[i].offensiveWord.hasOwnProperty(name) ){
			
			offendersList[i].offenseCount ++;
		}


	}

*/

/*
if (offenders.hasOwnProperty(name))
{
	offenders[name]++;
	console.log(name + "just said u again");
}
}
*/

/*
if (tweetText.indexOf('mozzarella') != -1)
{mozzarellaScore ++;}
console.log("mozzarella:", mozzarellaScore)

}
*/




